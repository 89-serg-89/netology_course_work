<!doctype html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body class="py-5">

<div class="container" id="app">
    <form action="#" id="signin-form">
        <p class="alert alert-danger d-none" id="info"></p>
        <input type="email" name="email" class="form-control mb-3" placeholder="email">
        <input type="password" name="password" class="form-control mb-3" placeholder="password">
        <input type="submit" value="signin" class="btn btn-primary">
    </form>

    <div id="is-auth-box" class="d-none">
        <a href="#" id="logout" class="btn btn-primary mb-3">logout</a>

        <div class="users">
            <p>Собеседники:</p>
            <select id="users" class="form-select"></select>
        </div>

        <div>
            <div aria-live="polite" aria-atomic="true" class="position-relative bd-example-toasts">
                <div class="toast-container p-3" id="toastPlacement"></div>
            </div>
            <div class="form-comment-wrap">
                <div class="mb-3">
                    <label for="text-comm" class="form-label">Отправить сообщение</label>
                    <textarea class="form-control" id="text-comm" rows="3"></textarea>
                </div>
                <button id="submit-comm" type="submit" class="btn btn-primary">Отправить</button>
            </div>
        </div>
    </div>
</div>

<script>
  const app = document.getElementById('app')
  const signinForm = document.getElementById('signin-form')
  const infoForm = document.getElementById('info')
  const isAuthBox = document.getElementById('is-auth-box')
  const toastWrap = document.getElementById('toastPlacement')
  const usersSelect = document.getElementById('users')
  const msg = document.getElementById('text-comm')
  const btnSendMsg = document.getElementById('submit-comm')
  const btnLogout = document.getElementById('logout')
  let socket

  const submit = async (e) => {
    e.preventDefault()
    try {
      const data = JSON.stringify(Object.fromEntries(new FormData(e.target).entries()))
      const response = await fetch('/api/signin', {
        method: 'post',
        body: data,
        headers: {'Content-type': 'application/json'}
      })
      const json = await response.json()
      if (json.status === 'ok') {
        isAuth(true)
      } else {
        infoForm.innerText = json.error
        infoForm.classList.remove('d-none')
      }
    } catch (e) {
      console.log(e)
    }
  }

  const logout = async () => {
    try {
      const response = await fetch('/api/logout', {
        method: 'get'
      })
      const json = await response.json()
      if (json.status === 'ok') {
        window.location.reload()
      }
    } catch (e) {
      console.log(e)
    }
  }

  const isAuth = status => {
    if (status) {
      socket.emit('getUsers')
      signinForm.classList.add('d-none')
      isAuthBox.classList.remove('d-none')
    }
  }

  const addMsg = msg => {
    const toast = `
        <div class="toast show">
            <div class="toast-header">
                <strong class="me-auto">Username</strong>
                <small>${msg.username}</small>
            </div>
            <div class="toast-body">
                ${msg.text}
            </div>
        </div>
    `
    toastWrap.insertAdjacentHTML('beforeend', toast)
  }
  const onAuth = msg => isAuth(msg === 'true')
  const onUsers = msg => {
    for (const item of msg) {
      const opt = `
          <option value="${item.id}">${item.name}</option>
        `
      usersSelect.insertAdjacentHTML('beforeend', opt)
    }
  }

  const socketConnect = () => {
    socket = io.connect('/')
    socket.emit('isAuth')
    socket.on('message', addMsg)
    socket.on('auth', onAuth)
    socket.on('users', onUsers)
  }

  const sendMessage = () => {
    socket.emit('sendMessage', {
      receiver: usersSelect?.value || null,
      text: msg.value,
    })
    msg.value = ''
  }

  signinForm.addEventListener('submit', submit)
  btnLogout.addEventListener('click', logout)
  btnSendMsg.addEventListener('click', sendMessage)
  document.addEventListener('DOMContentLoaded', socketConnect)
</script>
</body>
</html>
